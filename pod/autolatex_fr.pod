=head1 NOM

autolatex - compile de grands projets TeX

=head1 SYNOPSIS

autolatex [options] F<target> [F<target> ...]

=head1 DESCRIPTION

AutoLaTeX est un outil permettant de compiler de petits ou de grands projets LaTeX. L'entrée typique d'AutoLaTeX est un fichier Makefile contenant les définitions des variables et des règles nécessaires à la compilation du projet. Ce fichier Makefile est automatiquement généré par le script Perl fournit par AutoLaTeX. L'utilisateur peut facilement réaliser les étapes classiques d'une compilation TeX: prévisualisation du document, ou production d'un fichier PDF. AutoLaTeX gère les changements dans les fichiers pour déterminer quand il est nécessaire de produire un fichier ou non (fonctionnalité classique de GNU make). L'une des fonctionnalités les plus intéressantes d'AutoLateX est la génération automatique des fichiers incluses dans le projet TeX (c'est-à-dire dans le PDF généré) à partir de fichiers sources.

Par exemple, considérez un projet avec un seul fichier LaTeX, mydoc.tex, comme entrée. Pour produire le fichier .pdf, dans l'approche TeXnicienne classique, vous deviez entrer les commandes :

     pdflatex mydoc.tex
     bibtex mydoc.tex
     pdflatex mydoc.tex
     pdflatex mydoc.tex
     pdflatex mydoc.tex
     
La triple invocation de LaTeX est nécessaire pour s'assurer que toutes les références croisées aient bien été résolues et que tous les changements dans la mise en page ont bien été pris en compte. Cette séquence de commandes n'est pas difficile à utiliser ou à mémoriser, mais la répéter plusieurs dizaines de fois est ennuyeux. En utilisant AutoLaTeX, la ligne de command à mémoriser est :

     autolatex -f mydoc.tex
     
Notez que le fichier Makefile est automatiquement généré dans le répertoire courant.
Pour des projets plus grands requérant l'exécution de logiciels pour générer les images, pour générer la bibliographie BibTeX, ou produire le fichier .pdf, le nombre de commandes à utilisé s'accroit dans une approche manuelle. Avec AutoLaTeX, ces opérations sont simplifiées car il n'y a rien de plus à faire.

J'espère que cette introduction fournit un exemple simple et explicite de la simplicité engendrée par l'utilisation d'AutoLaTeX. AutoLaTeX est suffisament simple pour de petits projets TeX, et suffisament puissant pour de grands projets. Le reste de ce manuel est consacré à la documentation complète de AutoLaTeX.

=head1 TARGETS

AutoLaTeX fournit un nombre fixe de targets (au sens de GNU make) pour tous les projets. Le target par défaut est 'view' qui vise à produire une prévisualisation du document généré. Pour de plus amples informations sur GNU make, veuillez vous référer à la documentation de votre copie installée de make (GNU make, nmake ou autres).

Les targets supportés par AutoLaTeX sont :

=over 4

=item B<all>

Idem 'view'

=item B<clean>

Nettoyage du répoertoire courant en supprimant les fichiers générés durant le processus de compilation, à l'exception des fichiers de sauvegarde et des figures automatiquement générées.

=item B<cleanall>

Idem 'clean'. De plus, les fichiers temporaires de sauvegarde (backups) sont supprimés. Les figures
automatiquement générées sont également supprimées.

=item B<gen_doc>

Réalisation du processus de compilation pour produire un fichier .pdf/.dvi/.ps.

=item B<view>

Idem 'gen_doc'. De plus, le prévisualisateur est lancé après la compilation.

=item B<bibtex>

Compilation BibTeX.

=item B<makeindex>

Compilation MakeIndex.

=item B<images>

Lancement de la génération automatique des images seule.

=item B<commit>

Enregistrement du projet dans un système de gestion de versions (CVS ou SVN).

=item B<update>

Mise-à-jour de la copie locale du projet à partir d'un système de gestion de versions (CVS ou SVN).

=item B<showimages>

Affiche les noms des images.

=item B<showpath>

Affiche la valeur de la variable d'environnement PATH.

=item B<showvars>

Affiche les valeurs de variables internes (utile pour le debug)

=back

=head1 OPTIONS

=over 4

=item B<--[no]auto>

Autorise ou non la génération automatique des images.

=item B<--createconfig[=S<type>]>

Ne compile pas le projet LaTeX mais crait un fichier de configuration.
The fichier de configuration créé dépend du paramètre facultatif S<type>.
Si le S<type> est égal à S<project>, AutoLaTeX créera le fichier de configuration
dédié au projet. Dans les autres cas, il créera le fichier de configuration associé
à l'utilisateur.
Le fichier de configuration du projet possède un nom du type
chemin/vers/le/projet/.autolatex_project.cfg sur les plate-formes Unix, et
chemin\vers\le\projet\autolatex_project.cfg sur les autres plate-formes.
Le fichier de configuration par défaut de l'utilisateur est $HOME/.autolatex
sur les plate-formes Unix, C:\Documents and Settings\User\Local Settings\Application Data\autolatex.conf sur les plate-formes Windows, et $HOME/autolatex.conf sur les autres
plate-formes.

=item B<--createist>

Création d'un fichier de style pour MakeIndex dans le répertoire du projet.
The fichier créé sera nommé 'default.ist'. Si un fichier possèdant ce nom
existe déjà, il sera supprimé.

=item B<--createmakefile>

Ne réalise pas la compilation du projet mais crait le fichier Makefile seulement dans
le répertoire du projet. Ce fichier Makefile permettra de compiler le projet.

=item B<--defaultist>

Autorise AutoLaTeX à utiliser MakeIndex avec un fichier de style par défaut fournit 
dans la distribution AutoLaTeX.

Les options --index et --noindex permettent également de changer le comportement
de AutoLaTeX concernant MakeIndex.

=item B<--dvi>

Compilation du projet pour obtenir un document DVI.

=item B<--exclude=S<nom>>

Interdit à AutoLaTeX de charger le convertisseur d'images appellé S<nom>. 

L'option --include permet d'autoriser des convertisseurs; et l'option
-I permet de spécifier où trouver les convertisseurs sur le système de fichiers.

=item B<-f=F<fichier>>

=item B<--file=F<fichier>>

Spécification du nom du fichier TeX principal (le point d'entrée du projet).
Si cette option n'estpas spécifiée, AutoLaTeX va rechercher un fichier .tex et,
à défaut, va utiliser le nom 'Main.tex'.

=item B<--fixconfig[=F<fichier>]>

Corrige la syntaxe d'un fichier de configuration. Si un nom de F<fichier> est spécifié,
AutoLaTeX va essayé de corriger ce fichier. Dans le cas contraire, AutoLaTeX va
corriger le fichier de configuration de l'utilisateur.

=item B<-?>

=item B<--help>

Affiche le manuel.

=item B<-I=S<chemins>>

Indique à AutoLaTeX qu'il peut trouver des convertisseurs d'images dans les répertoires indiqués. La valeur S<chemins> peut être un nom de répertoire seul ou une liste de noms sépérés par le caractère séparateur de votre système d'exploitation (':' sous Unix, ';' sous Windows par exemple).

L'option --exclude permet d'interdire le chargement de convertisseurs; et l'option
--include permet d'en autoriser le chargement.

=item B<--imgdirectory=S<chemin>>

Force AutoLaTeX à restreindre l'auto-génération des images seulement pour celles se trouvant dans le répertoire spécifié (ou dans l'un de ses fils).

=item B<--include=S<nom>>

Force AutoLaTeX à charger le convertisseur d'image spécifié. 

L'option --exclude permet d'interdire le chargement de convertisseurs; et l'option
-I permet de spécifier où AutoLaTeX trouvera des convertisseurs.

=item B<--index[=F<fichier_style>]>

Autorise AutoLaTeX à lancer MakeIndex si nécessaire.

Si l'option est utilisée avec une valeur, cette dernière sera considérée comme le nom du fichier de style MakeIndex (.ist) à utiliser.

Si cette option est utilisée sans valeur, AutoLaTeX utilisera MakeIndex avec un fichier de style qu'il tentera de détecter dans le répertoire du projet. Pour le cas où aucun fichier de style ne serait trouvé dnas le répertoire du projet, AutoLaTeX ne passera aucun fichier de style à MakeIndex.

Les options --defaultist et --noindex permettent également de changer le comportement
de AutoLaTeX concernant MakeIndex.

=item B<--noindex>

Interdit à AutoLaTeX d'utiliser MakeIndex.

Les options --defaultist et --index permettent également de changer le comportement
de AutoLaTeX concernant MakeIndex.

=item B<-o=F<répertoire>>

=item B<--output=F<répertoire>>

Spécifie le répertoire où doit être créer le fichier Makefile nécessaire à AutoLaTeX.

=item B<--pdf>

Réalise la compilation pour produire un document PDF. La compilation est basée sur pdflatex et non pas sur l'ancien processus latex+dvips+ps2pdf.

=item B<--ps>

Réalise la compilation pour produire un document Postscript. Cette compilation est basée sur latex et dvips.

=item B<--pspdf>

Réalise la compilation pour produire un document PDF. La compilation est basée sur l'ancien processus : latex, dvips, ps2pdf et non pas sur pdflatex.

=item B<--set S<nom>=S<valeur>>

Affecte une S<valeur> à une variable interne nommée S<nom>.
Les variables internes sont limitées en nombre et correspondent aux possibilités de la directive "set" des fichiers de configuration.

=item B<-v>

Chaque fois que cette option est spécifiée, AutoLaTeX devient plus verbeux.

=item B<--version>

Affiche la version d'AutoLaTeX.

=item B<--view[=F<fichier>]>

=item B<--noview>

Autorise ou interdit la prévisualisation du document après la compilation.
Le chemin du logiciel à utiliser pour prévisualiser peut être spécifiée par le F<fichier>. Si ce no mde fichier n'est pas précisé, AutoLaTeX va rechercher, dans cet ordre de préférence, F<acroread>, F<kpdf>, F<evince>, F<gv>, et F<xpdf>.

=back

=head1 AUTO GENERATION DES FIGURES

Un convertisseur est utilisé pour transformer des images sources en images importables dans un document TeX. Un convertisseur est un programme externe (eg. epstopdf) ou un script interne (eg. gnuplot2eps) à AutoLaTeX.

Un convertisseur est décrit dans un fichier .mk qui contient les définitions des variables et des règles Shell permettant de générer une image automatiquement.

AutoLaTeX supporte les formats de ligne de commande suivants :

=over 4

=item a) binfile [flags] [inputflags] inputfile [outputflags] outputfile [postflags]

=item b) binfile [flags] [outputflags] outputfile [inputflags] inputfile [postflags]

=item c) binfile [flags] inputflags=inputfile outputflags=outputfile [postflags]

=item d) binfile [flags] outputflags=outputfile inputflags=inputfile [postflags]

=item e) binfile [flags] [inputflags] inputfile outputflags=outputfile [postflags]

=item f) binfile [flags] outputflags=outputfile [inputflags] inputfile [postflags]

=item g) binfile [flags] inputflags=inputfile [outputflags] outputfile [postflags]

=item h) binfile [flags] [outputflags] outputfile inputflags=inputfile [postflags]

=item i) binfile [flags] [inputflags] inputfile [postflags] > outputfile

=item j) binfile [flags] inputflags=inputfile [postflags] > outputfile

=back

Les convertisseurs supportés directement par AutoLaTeX sont :

=over 4

=item B<Encapsuled PostScript (eps) vers Portable Document Format (pdf)>

basé sur l'outil L<epstopdf>. L'extension du fichier d'entrée est '.eps'.
Ce convertisseur est automatiquement inclu par AutoLaTeX même si vous l'excluez
avec l'option --exclude.

=over 12

=item Nom:                               eps2pdf_epstopdf

=item Convertiseur externe utilisé:      epstopdf

=item Convertisseur interne utilisé: 

=item Format d'entrée:                   .eps

=item Format de sortie:                  .pdf

=item Fournit des règles:                non

=item Fournit des macros:                $(EPS2PDF_SHELL_CMD)

=item Format de la ligne de commande:    f)

=back

=item B<Encapsuled PostScript (eps) vers Portable Document Format (pdf)>

basé sur l'outil L<ps2pdf>. L'extension du fichier d'entrée est '.eps'.
Ce convertisseur est automatiquement inclu par AutoLaTeX même si vous l'excluez
avec l'option --exclude.

=over 12

=item Nom:                               eps2pdf_ps2pdf

=item Convertiseur externe utilisé:      ps2pdf

=item Convertisseur interne utilisé: 

=item Format d'entrée:                   .eps

=item Format de sortie:                  .pdf

=item Fournit des règles:                non

=item Fournit des macros:                $(EPS2PDF_SHELL_CMD)

=item Format de la ligne de commande:    a)

=back

=item B<Document XFig (fig) vers Portable Document Format (pdf)>

basé sur les outils L<fig2dev> et L<epstopdf>. L'extension du fichier d'entrée est '.fig'.

=over 12

=item Nom:                               fig2pdf

=item Convertisseur externe utilisé:     fig2dev

=item Convertisseur interne utilisé:     eps2pdf

=item Format d'entrée:                   .fig

=item Format de sortie:                  .pdf

=item Fournit des règles:                oui

=item Fournit des macros:                $(FIG2EPS_SHELL_CMD)

=item Format de la ligne de commande:    a)

=back

=item B<Document XFig (fig) vers Portable Document avec des macros TeX (pdf+tex)>

basé sur les outils L<fig2dev> et L<epstopdf>.  L'extension du fichier d'entrée est '.ltx.fig'
et les extensions des deux fichiers en sortie sont '.pdf' et '.tex'.

Partie PDF:

=over 12

=item Nom:                               fig2pdf+tex

=item Convertisseur externe utilisé:     fig2dev

=item Convertisseur interne utilisé:     eps2pdf

=item Format d'entrée:                   .ltx.fig

=item Format de sortie:                  .pdf

=item Fournit des règles:                oui

=item Fournit des macros:                $(FIG2PSTEX_SHELL_CMD)

=item Format de la ligne de commandes:   a)

=back

Partie TeX:

=over 12

=item Nom:                               fig2pdf+tex

=item Convertisseur externe utilisé:     fig2dev

=item Convertisseur interne utilisé:     fig2pstex_t

=item Format d'entrée:                   .ltx.fig

=item Format de sortie:                  .tex

=item Fournit des règles:                oui

=item Fournit des macros:                $(FIG2PSTEX_T_SHELL_CMD)

=item Format de la ligne de commandes:   a)

=back

=item B<GNU plot (plot) vers Portable Document Format (pdf)>

basé sur les outils L<gnuplot> et L<epstopdf>. L'extension du fichier d'entrée est '.plot'.

=over 12

=item Nom:                               plot2pdf

=item Convertisseur externe utilisé:     gnuplot

=item Convertisseur interne utilisé:     eps2pdf

=item Format d'entrée:                   .plot

=item Format de sortie:                  .pdf

=item Fournit des règles:                oui

=item Fournit des macros:                $(FIG2PSTEX_SHELL_CMD)

=item Format de la ligne de commandes:   i)

=back

=item B<GNU plot (plot) vers Portable Document avec des macros TeX (pdf+tex)>

basé sur les outils L<gnuplot> et L<epstopdf>.  L'extension du fichier d'entrée est '.ltx.plot'
et les extensions des fichiers de sortie sont '.pdf' et '.tex'.

Partie PDF:

=over 12

=item Nom:                               plot2pdf+tex

=item Convertisseur externe utilisé:     gnuplot

=item Convertisseur interne utilisé:     gnuplot2pstex, eps2pdf

=item Format d'entrée:                   .ltx.plot

=item Format de sortie:                  .pdf

=item Fournit des règles:                oui

=item Fournit des macros:                $(PLOT2PSTEX_SHELL_CMD)

=item Format de la ligne de commande:    a)

=back

Partie TeX:

=over 12

=item Nom:                               plot2pdf+tex

=item Convertisseur externe utilisé:     gnuplot

=item Convertisseur interne utilisé:     gnuplot2pstex, eps2pdf

=item Format d'entrée:                   .ltx.plot

=item Format de sortie:                  .tex

=item Fournit des règles:                oui

=item Fournit des macros:                $(PLOT2PSTEX_T_SHELL_CMD)

=item Format de la ligne de commande:    a)

=back

=item B<Scalable Vector Graphic (svg) vers Portable Document Format (pdf)>

basé sur les outils L<inkscape> et L<epstopdf>. L'extension du ficiher d'entrée est '.svg'.

=over 12

=item Nom:                               svg2pdf

=item Convertisseur externe utilisé:     inkscape

=item Convertisseur interne utilisé:     eps2pdf

=item Format d'entrée:                   .svg

=item Format de sortie:                  .pdf

=item Fournit des règles:                oui

=item Fournit des macros:                $(SVG2EPS_SHELL_CMD)

=item Format de la ligne de commande:    e)

=back


=item B<Scalable Vector Graphic (svg) vers Portable Network Graphic (png)>

basé sur l'outil L<inkscape>. L'extension du fichier d'entrée est '.svg'.

=over 12

=item Nom:                               svg2png

=item Convertisseur externe utilisé:     inkscape

=item Converter interne utilisé:

=item Format d'entrée:                   .svg

=item Format de sortie:                  .png

=item Fournit des règles:                oui

=item Fournit des macros:                $(SVG2PNG_SHELL_CMD)

=item Format de la ligne de commande:    e)

=back

=item B<UML Metadata Interchange (xmi) vers Portable Document Format (pdf): variante Umbrello>

basé sur les outils L<umbrello> et L<epstopdf>. L'extension du fichier d'entrée est '.xmi'.

=over 12

=item Nom:                               xmi2pdf_umbrello

=item Convertisseur externe utilisé:     umbrello

=item Converter interne utilisé:         xmi2eps_umbrello, eps2pdf

=item Format d'entrée:                   .xmi

=item Format de sortie:                  .pdf

=item Fournit des règles:                oui

=item Fornit des macros:                 $(XMI2EPS_SHELL_CMD)

=item Format de la ligne de commande:    a)

=back

=item B<UML Metadata Interchange (xmi) vers Portable Document Format (pdf): variante xmi2svg>

basé sur les outils L<xmi2svg> et L<svg2pdf>. L'extension du fichier d'entrée est '.xmi'.

=over 12

=item Nom:                               xmi2pdf_xmi2svg

=item Convertisseur externe utilisé:     xmi2svg

=item Convertisseur interne utilisé:     svg2pdf

=item Format d'entrée:                   .xmi

=item Format de sortie:                  .pdf

=item Fournit des règles:                oui

=item Fournit des macros:                $(XMI2SVG_SHELL_CMD)

=item Format de la ligne de commande:    i)

=back

=item B<UML Metadata Interchange (xmi) vers Portable Document Format (pdf): variante uml2svg>

basé sur les outils L<uml2svg> et L<svg2pdf>. L'extension du fichier d'entrée est '.xmi'.


=over 12

=item Nom:                               xmi2pdf_uml2svg

=item Convertisseur externe utilisé:     uml2svg

=item Convertisseur interne utilisé:     svg2pdf

=item Format d'entrée:                   .xmi

=item Formatde sortie:                   .pdf

=item Fournit des règles:                oui

=item Fournit des macros:                $(XMI2SVG_SHELL_CMD)

=item Format de la ligne de commande:    i)

=back

=item B<Image bitmap compressée vers Image bitmap non compressée>

basé sur l'outil L<zcat>. Ce convertisseur considère que les images bitmaps sont compressées avec gzip. L'extension du fichier d'entrée est '.<fmt>.gz' où <fmt> est le format de l'image parmi 'png', 'jpg', 'jpeg', 'gif', 'bmp', et 'pdf'. Ce convertisseur de stocker des images compressées dans un projet LaTeX comme ressource. Les images sont décompressées dans un fichier ayant le même nom que l'image compressée sans l'extension '.gz'.

=over 12

=item Nom:                               imggz2img

=item Convertisseur externe utilisé:     zcat

=item Convertisseur interne utilisé:

=item Format d'entrée:                   .png.gz .jpeg.gz .jpg.gz .gif.gz .pdf.gz .bmp.gz

=item Format de sortie:                  .png .jpeg .jpg .gif .pdf .bmp

=item Fournit des règles:                oui

=item Fournit des macros:                $(IMGGZ2IMG_SHELL_CMD)

=item Format de la ligne de commande:    i)

=back

=item B<Diagram Editor (dia) vers Portable Document Format (pdf)>

basé sur les outils L<dia> et L<epstopdf>. L'extension du fichier d'entrée est '.dia'.

=over 12

=item Nom:                               dia2pdf

=item Convertisseur externe utilisé:     dia

=item Convertisseur interne utilisé:     eps2pdf

=item Format d'entrée:                   .dia

=item Format de sortie:                  .pdf

=item Fournit des règles:                oui

=item Fournit des macros:                $(DIA2EPS_SHELL_CMD)

=item Format de la ligne de commande:    f)

=back

=item B<Dot Graphviz (dot) vers Portable Document Format (pdf)>

basé sur l'outil L<graphviz>. L'extension du fichier d'entrée est '.dot'.

=over 12

=item Nom:                               dot2pdf

=item Convertisseur externe utilisé:     dot

=item Convertisseur interne utilisé:     dot2pdf

=item Format d'entrée:                   .dot

=item Format de sortie:                  .pdf

=item Fournit des règles:                oui

=item Fournit des macros:                $(DOT2PDF_SHELL_CMD)

=item Format de la ligne de commande:    a)

=back

=item B<Dot Graphviz (dot) vers Portable Network Graphic (png)>

basé sur l'outil L<graphviz>. L'extension du fichier d'entrée est '.dot'.

=over 12

=item Nom:                               dot2png

=item Convertisseur externe utilisé:     dot

=item Convertisseur interne utilisé:     dot2png

=item Format d'entrée:                   .dot

=item Format de sortie:                  .png

=item Fournit des règles:                oui

=item Fournit des macros:                $(DOT2PNG_SHELL_CMD)

=item Format de la ligne de commande:    a)

=back

=back

=head1 STYLE LATEX

AutoLaTeX fournit un style LaTeX appellé autolatex.sty. Il inclue les fonctions macros :

=over 4

=item B<\includefigurewtex{largeur}{fichier}>

inclusion d'une figure provenant d'un fichier .pstex_t

=back

=head1 FICHIER DE CONFIGURATION

=head2 Emplacement des fichiers de configuration

Les fichiers de configuration utilisés par AutoLaTeX peuvent être placés à plusieurs endroits sur le système de fichiers :

=over 4

=item * Configuration système (pour tous les utilisateurs): dans le répertoire où AutoLaTeX est installé (classiquement /usr/lib/autolatex sur les systèmes Unix).

=item * Configuration utilisateur: deux cas possibles; le répertoire de configuration nommé S<$HOME/.autolatex> sur Unix, ou S<C:\Documents and Settings\E<lt>userE<gt>\Local Settings\Application Data\autolatex> sur Windows existe; ou non.

Dans le premier cas, le fichier de configuration est stocké dans le répertoire sous le nom S<autolatex.conf>.

Dans le second cas, le fichier de configuration est dans le répertoire personnel de l'utilisateur et est nommé S<$HOME/.autolatex> sur Unix, et S<C:\Documents and Settings\E<lt>userE<gt>\Local Settings\Application Data\autolatex.conf> sur Windows.

=item * Configuration de projet: le fichier de configuration d'un projet est stocké dans le même répertoire que le fichier TeX principal. Il est nommé S<.autolatex_project.cfg> sur Unix et S<autolatex_project.cfg> sur Windows.

=back

=head2 Syntaxe des fichiers de configuration

Les fichiers de configuration respectent une syntaxe similaire aux fichiers Windows .ini.

Une ligne de commentaires démarre toujours par le caractère '#' ou ';' et se termine à la fin de la ligne.

Chaque directive de configuration doit être positionnée à l'intérieur d'une section de configuration. Une section de configuration est déclarée par son nom entre crochets. Exemple: C<[mysection]>

Chaque directive doit être déclarée comme suit : C<nom de la directive = valeur>

Quelques noms de sections sont réservés par AutoLaTeX, les autres seront considérés comme les noms de convertisseurs pour lesquels ces sections permettront de spécifier des directives de configuration.

=head3 Section [Viewer]

Cette section permet de configurer la prévisualisation.
Les directives reconnues sont :

=over 4

=item I<view> : indique si AutoLaTeX doit lancer, ou non, un prévisualisateur après la compilation. Values acceptables: C<yes> (oui) ou C<no> (non).
	
=item I<viewer> : est le chemin ou la ligne de commande du logiciel à lancer pour prévisualiser le document. Valeur acceptable: toute ligne de commande.

=back

=head3 Section [Generation]

Cette section permet de configurer la compilation du projet TeX.
Les directives reconnues sont :

=over 4

=item I<main file> : permet de spécifier le nom "simple" (sans chemin d'accès) du fichier principal TeX à compiler. Cette option n'est reconnue que dans les fichiers de configuration de projet.

=item I<generate images> : indique si AutoLaTeX doit générer automatiquement les figures. Valeurs acceptables: C<yes> (oui) ou C<no> (non)

=item I<generation type> : indique le type de compilation. Valeurs acceptées :

=over 8

=item C<pdf> - utilise pdflatex

=item C<dvi> - utilise latex

=item C<ps> - utilise latex et dvips

=item C<pspdf> - utilise latex, dvips et ps2pdf

=back

=item I<makeindex style> : précise le type de style que devra utiliser l'outil MakeIndex s'il est lancé. Il s'agit d'une liste de valeurs séparées par des virgules. Les valeurs acceptées sont :

=over 8

=item C<E<lt>nom de fichier<gt>> - si un nom de fichier est spécifié, AutoLaTeX considère qu'il s'agit du nom du fichier .ist à fournir à MakeIndex;

=item C<@system> - AutoLaTeX utilise le style .ist par défaut (fourni dans la distribution AutoLaTeX);

=item C<@detect> - AutoLaTeX tentera une auto-détection d'un fichier .ist dans le répertoire du projet. Si aucun fichier n'est trouvé, aucun style ne sera passé à MakeIndex;

=item C<@none> - AutoLaTeX ne passera jamais de style à MakeIndex;

=item C<E<lt>emptyE<gt>> - idem C<@none>.

=back

Si cette liste contient plus d'une valeur, AutoLaTeX appliquera le comportement de la première valeur répondant positivement.

=item I<translator include path> : spécification de répertoires additionnels contenant des convertisseurs. AutoLaTeX recherchera tous les convertisseurs dans ces répertoires et les chargera. Il s'agit d'une liste de répertoires séparés par le caractère séparateur de votre système d'exploitation (S<:> sur Unix, S<;> sur Windows). Si un chemin contient ce caractère séparateur ou une virgule, vous devrez l'encadrer par des guillements.

=item I<set make> : spécification de la ligne de commande de GNU make. Valeur acceptée: toute ligne de commande.

=item I<set latex> : spécification de la ligne de commande de latex. Valeur acceptée: toute ligne de commande.

=item I<set bibtex> : spécification de la ligne de commande de bibtex. Valeur acceptée: toute ligne de commande.

=item I<set dvips> : spécification de la ligne de commande de dvips. Valeur acceptée: toute ligne de commande.

=item I<set ps2pdf> : spécification de la ligne de commande de ps2pdf. Valeur acceptée: toute ligne de commande.

=item I<set latex_flags> : spécification des options de la ligne de commande à passer à latex.

=item I<set latex_draft_flags> : spécification des options de la ligne de commande à passer à latex lorsqu'il est lancé en mode "brouillon".

=item I<set bibtex_flags> : spécification des options de la ligne de commande à passer à bibtex.

=item I<set dvips_flags> : spécification des options de la ligne de commande à passer à dvips.

=item I<set ps2pdf_flags> : spécification des options de la ligne de commande à passer à ps2pdf.

=item I<set touch> : spécification de la ligne de commande Unix touch. Valeur acceptée: toute ligne de commande.

=item I<set echo> : spécification de la ligne de commande Unix echo. Valeur acceptée: toute ligne de commande.

=item I<set echo_err> : spécification de la ligne de commande Unix "echo >&2". Valeur acceptée: toute ligne de commande.

=item I<set find> : spécification de la ligne de commande Unix "find". Valeur acceptée: toute ligne de commande.

=back

=head3 Section [Clean]

Cette section permet de configurer les fonctionnalités de nettoyage d'AutoLaTeX (targets
S<clean> et S<cleanall>).
Les directives reconnues sont :

=over 4

=item I<files to clean> : est une liste (séparée par des espaces) de noms de fichiers (avec ou sans caractères magiques) à supprimer lorsque le target 'clean' est invoqué.

=item I<files to desintegrate> : est une liste (séparée par des espaces) de noms de fichiers (avec ou sans caractères magiques) à supprimer lorsque le target 'cleanall' est invoqué.

=back

=head3 Section [Scm]

Cette section permet de configurer le support d'un SCM (CVs ou SVN).
Les directives reconnues sont :

=over 4

=item I<scm commit> : spécification de la ligne de commande à lancer pour enregistrer la copie locale sur le serveur SCM.

=item I<scm update> : spécification de la ligne de commande à lancer pour mettre à jour la copie locale à partir d'un serveur SCM.

=back

=head3 Sections sur les convertisseurs

Une section dédiée à un convertisseur possède le même nom que le convertisseur.
Les directives reconnues sont :

=over 4

=item I<include module> : indique si le convertisseur doit être chargé par AutoLaTeX. Valeurs acceptées: C<yes> (oui) ou C<no> (non).

=back

=head1 VARIABLES DEFINIES PAR AUTOLATEX

Les variables utilisées par by AutoLaTeX peuvent être classées dans deux groupes. Le premier est typiquement utilisé pour configurer le comportement d'AutoLaTeX. Ces variables peuvent être surchargées sur la ligne de commande pour plus de flexibilité. Le second groupe contient les variables décrivant les convertisseurs.

=head2 Variables générales

=over 4

=item I<FILE>: Nom du document LaTeX document à compiler sans l'extension '.tex'. Valeur par défaut = Main.

=item I<OPEN_PDF>: Valeur booléenne (yes ou no) qui indique si le prévisualisateur PDF doit être lancé. Valeur par défaut = yes.

=item I<AUTO_GENERATE_IMAGES>: Valeur booléenne (yes ou no) qui indique si les figures incluses dans le document LaTeX doivent être automatiquement générées par AutoLaTeX. Valeur par défaut = yes.

=item I<PDF_VIEWER>: Chemin ou ligne de command du prévisualisateur. Si cette valeur n'est pas donnée, AutoLaTeX va rechercher, dans l'ordre de préférence, acroread, kpdf, evince et xpdf. Pas de valeur par défaut.

=item I<SCM_UPDATE_CMD>: Ligne de commande shell pour mettre à jour la copie locale à partir d'un serveur SCM (CVS ou SVM). Pas de valeur par défaut.

=item I<SCM_COMMIT_CMD>: Ligne de commande shell pour mettre à jour un serveur SCM (CVS ou SVM). Pas de valeur par défaut.

=item I<LATEX_CMD>: Ligne de commande à utiliser pour lancer le compilateur LaTeX. Valeur par défaut : pdflatex.

=item I<LATEX_DRAFT_FLAGS>: Options à passer au compilateur LaTeX lorsqu'il est utilisé en mode "brouillon". Valeur par défaut = --draftmode.

=item I<LATEX_FLAGS>: Options à passer au compilateur LaTeX lorsqu'il n'est pas utilisé en mode "brouillon". Aucune valeur par défaut.

=item I<BIBTEX_CMD>: Ligne de commande à utiliser pour lancer le compilateur BibTeX. Valeur par défaut : bibtex.

=item I<BIBTEX_FLAGS>: Options à passer au compilateur BibTeX. Aucune valeur par défaut.

=item I<MAKEINDEX_CMD>: Ligne de commande à utiliser pour lancer le compilateur MakeIndex. Valeur par défaut : makeindex.

=item I<MAKEINDEX_FLAGS>: Options à passer au compilateur MakeIndex. Aucune valeur par défaut.

=item I<MAKEINDEX_STYLEFILE>: Nom du fichier de style MakeIndex (.ist) à passer à MakeIndex. Si une valeur est spécifiée, l'option "-s fichier.ist" sera passée vers MakeIndex. Pas de valeur par défaut.

=item I<DVIPS_CMD>: Ligne de commande à utiliser pour lancer le convertisseur dvips. Valeur par défaut : dvips.

=item I<DVIPS_FLAGS>: Options à passer au convertisseur dvips. Aucune valeur par défaut.

=item I<PSPDF_CMD>: Ligne de commande à utiliser pour lancer le convertisseur ps2pdf. Valeur par défaut : ps2pdf.

=item I<PSPDF_FLAGS>: Options à passer au convertisseur ps2pdf. Aucune valeur par défaut.

=item I<TOUCH_CMD>: Ligne de commande à utiliser pour lancer une commande similaire à la commande Unix touch. Valeur par défaut : autolatex_touch.

=item I<ECHO_CMD>: Ligne de commande à utiliser pour lancer une commande similaire à la commande Unix echo. Valeur par défaut : autolatex_echo.

=item I<ECHO_ERR_CMD>: Ligne de commande à utiliser pour lancer une commande similaire à la commande Unix echo >&2. Valeur par défaut : autolatex_echo_err.

=item I<FIND_CMD>: Ligne de commande à utiliser pour lancer une commande similaire à la commande Unix find. Valeur par défaut : autolatex_find.

=back

=head2 Variables dédiées aux convertisseurs

(Remplacer xxx_ par le nom du convertisseur)

=over 4

=item I<xxx_BIN>: Commande à lancer.

=item I<xxx_FLAGS>: Options de la ligne de commande à passer.

=item I<xxx_INPUT_FLAGS>: Options devant apparaître avant le nom de ficher en entrée.

=item I<xxx_OUTPUT_FLAGS>: Options devant apparaître avant le nom de ficher en sortie.

=item I<xxx_POST_FLAGS>: Options devant apparaître à la fin de la ligne de commande.

=item I<xxx_OUTPUT_INPUT>: Valeur booléenne indiquant si l'autre entre le fichier d'entrée et le fichier de sortie doit être inversé sur la ligne de commande. Si la valeur est "yes", les options concernant le fichier en sortie seront placées avant les options concernant le fichier en entrée. Si la valeur est égale à "no", les options d'entrée seront placées avant les options de sortie.

=item I<xxx_OUTPUT_STDOUT>: Si la valeur est égale à "yes", les options de sortie seront ignorées afin de permettre une sortie sur la sortie standard du convertisseur.

=back

=head1 INTERFACE GRAPHIQUE

Une interface graphique est disponible depuis la version 5.0 de AutoLaTeX. Elle permet de configurer AutoLaTeX et de lancer le processus de compilation.

Les interfaces graphiques disponibles sont :

=over 4

=item B<autolatex-gtk> : Interface graphique utilisant le Gimp ToolKit (GTK).

=back

=head1 RAPPORT DE BUG ET RETOUR

Pour rapporter un bug, fournir un retour, suggérer une fonctionnalité... vous pouvez visiter le site d'AutoLaTeX à l'adresse L<http://www.arakhne.org/autolatex/> ou envoyé un courrier électronique à l'ateur à l'adresse L<galland@arakhne.org>.

=head1 CONFIGURATION MINIMALE REQUISE

Pour configurer et installer AutoLaTeX, vous aurez besoin d'un système d'exploitation proposant un shell de type Unix possédant une version compatible avec GNU make.

Pour compiler et installer AutoLaTeX, il est nécessaire d'installer le paquet Compress::Zlib. Ce paquet n'est pas nécessaire à l'exécution d'AutoLaTeX mais seulement à son installation. De plus, pour compiler AutoLaTeX, vous devrez installer la commande 'msgfmt' qui est un utilitaire contenu dans la bibliothèque 'gettext'.

De plus, pour utiliser AutoLaTeX, vous devrez installer :

=over 4

=item latex. Le développement d'AutoLaTeX a été réalisé avec la distribution TeX de Thomas Esser, teTeX, version 1.0.7. Plus de détails sur teTeX peuvent être trouvés sur L<http://www.tug.org/tetex/>.

=item GNU make version 3.80 ou supérieure. Pour plus d'information sur GNU make, visitez L<http://www.gnu.org/software/make/>. AutoLaTeX ne fonctionne pas avec une version de GNU make inférieure à 3.80. Les versions plus anciennes ne fournissent pas certaines fonctionnalités nécessaires à AutoLaTeX.

=item Perl version 5.004 or higher.

=item Le paquet Perl Config::Simple.  

=item Le paquet Perl Locale::gettext

=back

=head1 INSTALLATION

L'installation d'AutoLaTeX consiste dans un premier temps à lancer le script Makefile.PL pour générer un fichier Makefile. Ce dernier permet de compiler et d'installer AutoLaTeX. La séquence classique de commandes est la suivante :

C<cd chemin_vers_les_sources_d_autolatex/>

C<perl ./Makefile.PL --prefix=/usr>

C<make>

C<make install>

C<make clean>

=head1 LICENCE D'AUTOLATEX

S<GNU Public License (GPL)>

Copyright (c) 1998-2009  Stéphane GALLAND <galland@arakhne.org>

This program is free software; you can redistribute it and/or modify it under the terms of the GNU L<General Public License|http://www.gnu.org/copyleft/gpl.html> as published by the L<Free Software Foundation|http://www.fsf.org/>; either version 2 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program; see the file S<COPYING>. If not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

=head1 COPYRIGHT DE CE MANUEL

S<GNU Free Documentation License (FDL)>

Copyright (c)  1998-2009  Stéphane Galland E<lt>galland@arakhne.orgE<gt>.

Permission is granted to copy, distribute and/or modify this document under the terms of the L<GNU Free Documentation License|http://www.gnu.org/licenses/fdl.txt>, Version 1.2 or any later version published by the L<Free Software Foundation|http://www.fsf.org/>; with the Invariant Sections being S<AUTOLATEX LICENSE> and S<MANUAL COPYRIGHT>, no Front-Cover Texts, and no Back-Cover Texts. A copy of the license is included in the file name S<GNU Free Documentation License.txt>.

=head1 VOIR AUSSI

L<pdflatex>, L<latex>, L<bibtex>, L<epstopdf>,
L<fig2dev>, L<gnuplot>, L<inkscape>, L<umbrello>, L<zcat>
